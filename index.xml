<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>oopsmonk</title>
    <link>https://oopsmonk.github.io/</link>
    <description>Recent content on oopsmonk</description>
    <image>
      <url>https://oopsmonk.github.io/images/bio-oopsmonk.jpg</url>
      <link>https://oopsmonk.github.io/images/bio-oopsmonk.jpg</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 05 Jun 2022 13:01:48 +0800</lastBuildDate><atom:link href="https://oopsmonk.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Note-taking and file sharing with Syncthing and Joplin</title>
      <link>https://oopsmonk.github.io/posts/2022-06-05-syncthin-joplin/</link>
      <pubDate>Sun, 05 Jun 2022 13:01:48 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2022-06-05-syncthin-joplin/</guid>
      <description>You can find many note-taking services, like, Evernote, Google Keep, Notion, Obsidian and online storage services such as, Dropbox, Google Drive, OneDrive, iCloud. They are easy to use and secure. But, secure is not equal to private! A way to keep privacy is host private services by self.
Edward Snowden’s Privacy Tips: “Get Rid Of Dropbox,” Avoid Facebook And Google
This is how I share/edit notes and files with different devices which service providers are unable to peek and analyze my private contents.</description>
    </item>
    
    <item>
      <title>Install Perf on Ubuntu 20.04</title>
      <link>https://oopsmonk.github.io/posts/2022-04-28-perf/</link>
      <pubDate>Thu, 28 Apr 2022 18:27:21 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2022-04-28-perf/</guid>
      <description>What is Perf? Perf or perf-event is a Linux profiler and is part of the Linux Kernel which can help you solve advanced performance and troubleshooting functions. It covers hardware level (CPU/PMU, Performance Monitoring Unit) features and software features (software counters, tracepoints) as well.
Install on Ubuntu If perf has not installed on the system
$ perf WARNING: perf not found for kernel 5.4.0-109 You may need to install the following packages for this specific kernel: linux-tools-5.</description>
    </item>
    
    <item>
      <title>RPi vs i5-8250U</title>
      <link>https://oopsmonk.github.io/posts/2018-12-01-month12/</link>
      <pubDate>Sat, 01 Dec 2018 11:35:58 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2018-12-01-month12/</guid>
      <description>utarray benchmarking
Week48~52 小筆記 bazel installation on Raspberry Pi Issue#1308
$ sudo apt-get install build-essential openjdk-8-jdk python zip unzip $ wget https://github.com/bazelbuild/bazel/releases/download/0.19.2/bazel-0.19.2-dist.zip $ mkdir bazel-0.19.2 &amp;amp;&amp;amp; unzip ./bazel-0.19.2-dist.zip -d bazel-0.19.2 $ cd bazel-0.19.2 $ env BAZEL_JAVAC_OPTS=&amp;#34;-J-Xms384m -J-Xmx512m&amp;#34; bash ./compile.sh 🍃 Building Bazel from scratch...... 🍃 Building Bazel with Bazel. .WARNING: --batch mode is deprecated. Please instead explicitly shut down your Bazel server using the command &amp;#34;bazel shutdown&amp;#34;. INFO: Analysed target //src:bazel_nojdk (233 packages loaded, 10401 targets configured).</description>
    </item>
    
    <item>
      <title>RPi Home</title>
      <link>https://oopsmonk.github.io/posts/2018-10-14-2018month10/</link>
      <pubDate>Sun, 14 Oct 2018 20:40:28 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2018-10-14-2018month10/</guid>
      <description>Test Google Asistant on Raspberry Pi.
Week40~44 (10/01~10/31) 網路文章 Wi-Fi 6: What’s Different, and Why it Matters
網路資源 Raspberry Pi BT setup
Turn your Raspberry Pi into homemade Google Home
Google Asistant SDK
Google Asistant SDK C++ 使用Python lib常常會當機改用C++比較沒問題, 但C++版本有限制API使用的次數, 無法長期使用.</description>
    </item>
    
    <item>
      <title>How many pointers you can have?</title>
      <link>https://oopsmonk.github.io/posts/2018-08-22-2018month8/</link>
      <pubDate>Wed, 22 Aug 2018 21:10:01 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2018-08-22-2018month8/</guid>
      <description>Pointers, again&amp;hellip;
How many pointers you can have?
C89: 12
Week31~35 (07/29~08/31) 網路文章 What is the difference between const int*, const int * const, and int const *?
Read it backwards (as driven by Clockwise/Spiral Rule):
int* - pointer to int
int const * - pointer to const int
int * const - const pointer to int
int const * const - const pointer to const int
Now the first const can be on either side of the type so:</description>
    </item>
    
    <item>
      <title>Energetic People!</title>
      <link>https://oopsmonk.github.io/posts/2018-06-30-2018month7/</link>
      <pubDate>Sat, 30 Jun 2018 16:41:34 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2018-06-30-2018month7/</guid>
      <description>It&amp;rsquo;s blocks and no chain, keep fighting!
Week27~30 (07/01~27) 網路文章 IOTA Summer Summit 2018</description>
    </item>
    
    <item>
      <title>Hell Yeah! Keep Fighting</title>
      <link>https://oopsmonk.github.io/posts/2018-05-29-2018month6/</link>
      <pubDate>Tue, 29 May 2018 16:48:40 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2018-05-29-2018month6/</guid>
      <description>More bad ideas + Generosity = Good ideas
Week22~26 (06/01~29) 網路文章 Elon Musk emails employees about &amp;rsquo;extensive and damaging sabotage&amp;rsquo; by employee
樹大招風&amp;hellip;.但內部管理是否有問題?
溝通一直是最難處理的問題之一, 尤其是資訊不對等的情況下.
網路資源 esp32-websocket
websocket component for esp-idf.
讀書心得 論文學習 </description>
    </item>
    
    <item>
      <title>What Does The Fox Say?</title>
      <link>https://oopsmonk.github.io/posts/2018-04-30-2018month5/</link>
      <pubDate>Tue, 01 May 2018 09:10:34 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2018-04-30-2018month5/</guid>
      <description>Okinawa Churaumi Aquarium
Kouri Bridge - The Longest Bridge in Okinawa
Week18~21 (05/04~25) 網路文章 Students are being prepared for jobs that no longer exist. Here&amp;rsquo;s how that could change.
NBC關於美國高中教育的深入報導, 提到現在的教育方式已經無法保證讓學生找到理想的工作，尤其是技職生. 文中提到几個點:
高中準時畢業的人有84%, 後來70%直升大學. 雖然學校盡力教導讓學生面對未來, 但學校也不知將來會是如何, 因為計劃跟不上變化. “We’re preparing kids for these jobs of tomorrow, but we really don’t even know what they are,” 2016年的調查, 只有34%的高中生(12th-graders) 對學習感到興趣. 公立大學(University of Massachusetts Lowell)1年的學費大約37萬台幣($12,496USD), 私立大學(Elmhurst College)學費約140萬台幣($47,121USD), 另一所公立大學(University of Minnesota)學費約91萬台幣($30,514USD). 另外自己查了一下哈佛大學每年學費138萬台幣(46,340USD), 以上都是只有學費, 如果加上宿舍及雜費大約是202萬台幣($67,580USD). 至2017年底美國的學貸已高達1.38兆美元, 房貸8.</description>
    </item>
    
    <item>
      <title>Tangled</title>
      <link>https://oopsmonk.github.io/posts/2018-04-02-2018month4/</link>
      <pubDate>Mon, 30 Apr 2018 08:13:28 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2018-04-02-2018month4/</guid>
      <description>Algorithm, Blockchain, Coursera
真心推Coursera上的Data Structures and Algorithms Specialization, 挑有興趣的就好.
2017年底至今拿了4張Certifications, Algorithms on Graphs是比較有趣的課程.
其它3張是Algorithmic Toolbox, Data Structures, Algorithms on Strings
Week14 (04/06) 讀書心得 Burrows-Wheeler Transform - data compression
Cyclic rotation Sorting Last column Inverting Burrows-wheeler transform
Mark the occurrence of characters Putting sorted bwt string to frist column Knuth–Morris–Pratt - string searching algorithm (or KMP algorithm)
Suffix array - a sorted array of all suffixes of a string.
Week15 (04/13) Week16 (04/20) Week17 (04/27) 網路文章 World’s first IOTA Smart Charging Station</description>
    </item>
    
    <item>
      <title>Never Split the Difference</title>
      <link>https://oopsmonk.github.io/posts/2018-03-01-2018month3/</link>
      <pubDate>Thu, 01 Mar 2018 17:01:06 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2018-03-01-2018month3/</guid>
      <description>Debug, Debug, Debug&amp;hellip;, Muscle Up Tips
Week9 (03/02) 讀書心得 FBI談判協商術
積極聆聽, 鏡像模仿, 極端錨點, 開放型/測試型/校準型問題, 對事不對人, 每個人都怕失去, 成見使人盲目, 假設提供指引.
The power of &amp;ldquo;No&amp;rdquo;, Three types of &amp;ldquo;Yes&amp;rdquo;, The power of &amp;ldquo;Right&amp;rdquo;, Emotion is one of the keys, Be Honest.
Thinking fast and slow.
Week10 (03/09) 網路資源 Chris Voss: Never Split the Difference
Week11 (03/16) 網路文章 Android Treble: blessing or trouble?
Diving into SDCardFS: How Google’s FUSE Replacement Will Reduce I/O Overhead</description>
    </item>
    
    <item>
      <title>cache not cash...</title>
      <link>https://oopsmonk.github.io/posts/2018-01-26-2018month2/</link>
      <pubDate>Wed, 28 Feb 2018 15:14:51 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2018-01-26-2018month2/</guid>
      <description>Android, Chinese New Year, blockchain, Cache miss
Week5 (02/02) 這個月雖然有年假但比平常更忙！ 結論: 放假不一定放鬆, 想專心做事 :-)
網路文章 Processor Pipeline
Gallery of Processor Cache Effects
Using Streamline to Guide Cache Optimization
參考這篇分析Kodi17.6影片播放時的L1/L2 cache access情況, 播放2160p影片時L1/L2 data ratios不高分別在0.046/0.18, 使用Kodi18更少分別為0.041/0.16.
另外Kodi18在記憶體使用上比17.6減少3.6%, cache miss 減少47~55%. Cache Refill Ratios算法
L1 data ratio: $CacheDataRefill/$CacheDataAccess
L2 data ratio: $CacheL2DataRefill/$CacheL2DataAccess
網路資源 Blockchain Demo
大略的介紹blockchain, 簡單明瞭.</description>
    </item>
    
    <item>
      <title>Is there a shortcut?</title>
      <link>https://oopsmonk.github.io/posts/2018-01-02-2018month1/</link>
      <pubDate>Fri, 26 Jan 2018 11:35:41 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2018-01-02-2018month1/</guid>
      <description>Android, Algorithms
Week1 (01/05) 讀書心得 Algorithms on Graphs - Week5 給出座標上n個點:
找出最短路徑(the shortest path) 分群(Clustering) 為Minimun Spanning Tree相關問題, 可以使用Kruskal’s MST Algorithm 及Disjoint-set 來解.
for all u ∈ V : MakeSet(v ) X ← empty set // a set with solution edges sort the edges E by weight for all {u, v } ∈ E in non-decreasing weight order: if Find(u) != Find(v): add {u, v } to X Union(u, v ) return X Week2 (01/12) 網路文章 Android编译系统中的Android.</description>
    </item>
    
    <item>
      <title>Resolution and Revolution! </title>
      <link>https://oopsmonk.github.io/posts/2017-11-24-2017month12/</link>
      <pubDate>Sun, 31 Dec 2017 09:52:02 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2017-11-24-2017month12/</guid>
      <description>SEAndroid, Algorithms, Numpy
Android N -&amp;gt; O 被自己的石頭砸到腳 對於晶片廠來說Android決解了軟體開發的問題, 也加速了ODM/OEM的開發時程.
沒錯&amp;hellip;但對於手機/電視之外的應用..存在些問題.
另外差異化及客制帶來些不定時炸彈.
Sepolicy for Android Treble 使用numpy array修改pixel values. 網路資源 Machine Learning 101 - Jason Mayes
New year&amp;rsquo;s resolutions IELTS overall 6.5 Data Structures and Algorithms Specialization Master of Computer Science in Data Science </description>
    </item>
    
    <item>
      <title>Sepolicy for Android Treble</title>
      <link>https://oopsmonk.github.io/posts/2017-12-20-sepolicy-for-android-treble/</link>
      <pubDate>Wed, 20 Dec 2017 11:54:18 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2017-12-20-sepolicy-for-android-treble/</guid>
      <description>A Note about sepolicy in Android Oreo.
First thing first SELinux documents:
SELinux for Android 8.0 What is SELinux? What is SEAndroid? SELinux Policy Concepts and Overview Android sepolicy files Policy path: /system/sepolicy BOARD_SEPOLICY_DIR (device/$VENDOR/$DEVICE/sepolicy/, device/$VENDOR/$DEVICE/common/sepolicy/) Policy Macros: system/sepolicy/public/te_macros system/sepolicy/public/global_macros system/sepolicy/public/ioctl_macros system/sepolicy/public/neverallow_macros system/sepolicy/private/mls_macros system/sepolicy/reqd_mask/mls_macros Security Context: file_contexts, labeling files infilesystem. property_contexts, labeling android system/vendor properties genfs_contexts, Pre-file labeling for /proc files, generic filesystem security contexts. seapp_contexts, used by zygote and installd via libselinux, mapping app UID andseinfofor /data/data directory hwservice_contexts, for hwservice manager to check vndservice_contestx, for vndservice manager to check service_contexts, for service manager to check Type Enforcement *.</description>
    </item>
    
    <item>
      <title>Preparing a preparation?! It&#39;s nonsense...</title>
      <link>https://oopsmonk.github.io/posts/2017-10-27-2017month11/</link>
      <pubDate>Fri, 24 Nov 2017 14:10:54 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2017-10-27-2017month11/</guid>
      <description>SELinux, Arm Tech Symposia 2017 Taiwan, golang, IoT
Week44 (11/03) 網路資源 Firmware Updates over Low-Power Wide Area Networks
Enabling firmware updates over LPWAN
ARMmbed/lorawan-fota-demo
滿有趣的問題, IoT建置會預期device要能長達10年的壽命, 但10年間的變化是很大的.
Week45 (11/10) 網路文章 Android SELinux Treble
Android O 為了加速產品開發, 在framework上有重大的改變, 使用了Treble.
Vender, ODM, OEM有各自需要維護的partitions.
Week46 (11/17) 網路文章 Neural fuzzing: applying DNN to software security testing
好奇其它的nural networks的應用, 常看到CNN.
網路資源 hacdias/filemanager
感覺不錯用的web filemanager, 目前很有活力, 送了一個PR不到1天就被merge了.
讀書心得 因為把玩hacdias/filemanager看了一下A Tour of Go在語法上還不太能適應, 不過還滿容易上手的, Method跟Interface的用法還要再研究一下, Concurrency也要花一點時間了解, 必竟concurrency是最大的賣點吧!</description>
    </item>
    
    <item>
      <title>Policy Configuration of SELinux and SEAndroid</title>
      <link>https://oopsmonk.github.io/posts/2017-11-17-policy-configuration-of-selinux-and-seandroid/</link>
      <pubDate>Fri, 17 Nov 2017 08:12:13 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2017-11-17-policy-configuration-of-selinux-and-seandroid/</guid>
      <description>A Note for SELinux and SEAndroid policy configuration.
SEAndroid Security-Enhanced Linux in Android
SELinux for Android 8 - Treble mode
SEAndroid安全機制中的文件安全上下文關聯分析 - file_context
SEAndroid安全機制中的進程安全上下文關聯分析 - process
Android 8 Treble mode: Kernel early mount PRODUCT_FULL_TREBLE, PRODUCT_FULL_TREBLE_OVERRIDE, BOARD_SEPOLICY_DIRS Android 4.3 ~ 6 TE macro define: external/sepolicy/te_macros
Android 8 TE macro define: system/sepolicy/te_macros
##################################### # domain_trans(olddomain, type, newdomain) # Allow a transition from olddomain to newdomain # upon executing a file labeled with type.</description>
    </item>
    
    <item>
      <title>ARM Mali Profiling Metrics</title>
      <link>https://oopsmonk.github.io/posts/2017-11-01-arm-mali-profiling-metrics/</link>
      <pubDate>Wed, 01 Nov 2017 19:14:00 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2017-11-01-arm-mali-profiling-metrics/</guid>
      <description>Some metrics for ARM Mali performance analysis in DS-5 Streamline or MGD.
DS-5 Streamline Mali-470 (Utgard) GPU Bandwidth = (Words read, master + Words written, master) * Bus Width
Overdraw = Fragments Passed Z/stencil count * Number of Cores / Resolution * FPS
GPU Bandwidth = (38342943+38661456) * (128/8) = 1232070384 bytes/s = 1174.99 MB/s Overdraw = (79194586+79152584+79112550+79117609)/(1920x1080) = 152.67
Mali-T820 (Midgard) Job Slots
JS0: fragment shading. JS1: vertex, geometry, compute, and tiling.</description>
    </item>
    
    <item>
      <title>What&#39;s wrong with benchmarks?</title>
      <link>https://oopsmonk.github.io/posts/2017-09-29-2017month10/</link>
      <pubDate>Fri, 27 Oct 2017 09:34:49 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2017-09-29-2017month10/</guid>
      <description>ARM performance, Algorithms
In fact, there is no universal benchmark tool.
Week40 (10/06) 網路文章 Why do we learn algorithms?
Why do we need so many sorting algorithms?
Why do we need to learn different sorting algorithms when the STL sort function is already available to us in C++?
網路資源 The Algorithms
不同程式語言演算法的實現.
every-programmer-should-know
Data Structure Visualizations
演算法視覺化
Week41 (10/13) 網路文章 GPU Processing Budget Approach to Game Development
GPU budget是估算處理1 pixel的cycle cost, 單位是cycles/frame/pixel</description>
    </item>
    
    <item>
      <title>Building Different Android Version Using schroot</title>
      <link>https://oopsmonk.github.io/posts/2017-10-24-building-different-android-version/</link>
      <pubDate>Tue, 24 Oct 2017 10:07:29 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2017-10-24-building-different-android-version/</guid>
      <description>I have a build environment with make4.1 and JDK8 for Android N/O, but JDK6 and make3.81 are required by Android KitKat.
Here is a way to create a clean environment for Android KK.
Create a new environment in current Ubuntu 16.04 install schroot and debootstrap
sudo apt install schroot debootstrap
if xenial no exist, update to latest version of debootstrap
ls -l /usr/share/debootstrap/scripts/xenial
Configure new environment edit /etc/schroot/schroot.conf
[Build_KK] description=ubuntu16.04 Android_KK type=directory directory=/srv/chroot/Build_KK users=oopsmonk groups=oopsmonk root-groups=root profile=default Adding Mount points edit /etc/schroot/default/fstab</description>
    </item>
    
    <item>
      <title>Waterline?</title>
      <link>https://oopsmonk.github.io/posts/2017-08-29-2017month9/</link>
      <pubDate>Fri, 29 Sep 2017 11:57:59 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2017-08-29-2017month9/</guid>
      <description>Jigsaw Puzzle, Hidden layers, New SoC, Algorithm basics, HTC
Week35 (09/01) 第一次完成520片的拼圖, 花了4個晚上的時間, 大約12小時吧?!
下次記得顏色鮮明的圖會比較愜意些.
Week36 (09/08) 網路文章 Credit firm Equifax says 143m Americans&amp;rsquo; social security numbers exposed in hack
在新聞公開前高層就己賣掉市值1.8m的股票!!
網路資源 Google Developer Documentation Style Guide
Google公佈了內部文件撰寫的格式及注意事項.
Neural Networks and Deep Learning - Week 3 Tuning hidden layer size
iterations: 5000
learning_rate: 1.2
activation: sigmoid
Accuracy for 1 hidden units: 67.5 % Accuracy for 2 hidden units: 67.25 % Accuracy for 3 hidden units: 90.</description>
    </item>
    
    <item>
      <title>Faster R-CNN Use Caffe Framework</title>
      <link>https://oopsmonk.github.io/posts/2017-08-31-faster-r-cnn-use-caffe-framework/</link>
      <pubDate>Thu, 31 Aug 2017 10:00:10 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2017-08-31-faster-r-cnn-use-caffe-framework/</guid>
      <description>Install caffe framework and run Faster R-CNN demo on Ubuntu 16.04.
Test environment CPU: Intel(R) Core(TM) i3-4130 CPU @ 3.40GHz 4-Cores
GPU: ASUSTeK GeForce GTX 1060 with 6GB Memory
HD: WDC WD5000AAKX
OS: Ubuntu 16.04
Test Flow Install software requirement Video pre-processing: get jpeg images from source video Image Labeling Use Faster R-CNN to genrate trained model Run Faster R-CNN demo Requirement Hardware:
Good graphic card with large memory (6GB memory is okay, but it has problem in VGG traing.</description>
    </item>
    
    <item>
      <title>Going Deep</title>
      <link>https://oopsmonk.github.io/posts/2017-08-02-2017month8/</link>
      <pubDate>Fri, 25 Aug 2017 19:34:48 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2017-08-02-2017month8/</guid>
      <description>以前球隊在回防時, 教練總會說&amp;quot;快跑! 別回頭, 到定點再休息&amp;quot;.
關於人生, 喘息點在哪兒? 我想就在滴水穿石之間!
Deep Learning &amp;lt;&amp;ndash;&amp;gt; keep learning
Week31 (08/04) 網路文章 A Brief History of CNNs in Image Segmentation: From R-CNN to Mask R-CNN
R-CNN: https://arxiv.org/abs/1311.2524
Visual Recognition就是從這裡爆發了&amp;hellip; 透過Selective Search找到Region後丢給修改過的AlexNet學習, 最後再給Support Vector Machine (SVM) 這層CNN.
原本設計的R-CNN就只做這些: 用Selective Search找region 透過pre-trained AlexNet去算特徵後交給SVM看region裡的是什麼鬼東西 最後透過線性回歸(linear regression)畫出物件的座標 Fast R-CNN: https://arxiv.org/abs/1504.08083
Region proposals using Selective Search. RoI (Region of Interest) Pooling
Combine All Models into One Network
將R-CNN的AlexNet, SVM, Regressor整合在一起變成單一個network Fast R-CNN instead used a single network to compute the extract image features (CNN), classify (SVM), and tighten bounding boxes (regressor).</description>
    </item>
    
    <item>
      <title>Math</title>
      <link>https://oopsmonk.github.io/posts/2017-07-03-2017month7/</link>
      <pubDate>Fri, 28 Jul 2017 09:35:04 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2017-07-03-2017month7/</guid>
      <description>以前球隊在回防時, 教練總會說&amp;quot;快跑! 別回頭, 到定點再休息&amp;quot;.
關於人生, 喘息點在哪兒? 我想就在滴水穿石之間!
Week27 (07/07) 網路文章 Elon Musk: The world&amp;rsquo;s population is accelerating toward collapse and nobody cares
網路資源 Barbara Oakley: &amp;ldquo;Learning How to Learn&amp;rdquo; | Talks at Google
Week28 (07/14) 網路資源 Numpy Quick Start
MathJax basic tutorial and quick reference
MathJax語法速查及範例
Week29 (07/21) 網路文章 Path Guide: A New Approach to Indoor Navigation
讀書心得 The Numpy Stack in Python
用簡短的方式介紹numpy, pandas, matplotlib, scipy.
numpy: 在matrix, vector處理會比ptython built-in還快很多且方便.</description>
    </item>
    
    <item>
      <title>OSDI</title>
      <link>https://oopsmonk.github.io/posts/2017-05-31-2017month6/</link>
      <pubDate>Fri, 30 Jun 2017 20:47:50 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2017-05-31-2017month6/</guid>
      <description>以前球隊在回防時, 教練總會說&amp;quot;快跑! 別回頭, 到定點再休息&amp;quot;.
關於人生, 喘息點在哪兒? 我想就在滴水穿石之間!
Week22 (06/02) 讀書心得 OSDI: Memory Management
Kernel space的memory management, 要考慮到的問題, Internal/External fregmentation, physical/logical contiguous, buddy system, slab allocator.
User space的memory管理, page fault handler, Red-Black Tree / AVL Tree.
論文學習 FarmBeats: An IoT Platform for Data-Driven Agriculture PDF ,Slides
FarmBeats這套系統提出了几個解決方法:
遠距傳輸, 以往的解法是用satellite或是手機訊號, 這裡是使用TVWS(TV White Space)以減少硬體成本, TVWS是利用數位電視未使用的頻寬做傳輸, 屬於低頻有傳輸距離長, 穿透力強的優點. 天氣感知系統, 透過OpenWeather API的資料來規劃電量的使用及電池的充電與否. 風力輔助系統, 收集農地的風向及風力數據, 透過飛行演算法(Flight Planning Algorithm)規劃出適當的路線, 減少逆風造成的額外耗電量. 本地影像及資料壓縮, 一般Drone的航空影像(Aerial Imagery)或sensors資料都是直接傳到雲端, 透過Farmbeats的gateway做中繼站並壓縮影像及sensors資料, 可支援1星期的在網路無法使用情況. Week23 (06/09) 網路文章 When should we use mutex and when should we use semaphore</description>
    </item>
    
    <item>
      <title>[Paper] - An Evolutionary Study of Linux Memory Management for Fun and Profit</title>
      <link>https://oopsmonk.github.io/posts/2017-06-13-linux-memory-management/</link>
      <pubDate>Tue, 13 Jun 2017 14:47:22 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2017-06-13-linux-memory-management/</guid>
      <description>Memory management主要的功能是page mapping, memory protection, and sharing, 但隨著時間不斷的演進已經算是kernel裡不小的subsystem.
這份研究分析2009~2015年之間4587筆有關memory management(mm)的patches, Linux版本由v2.6.32.1 ~ v4.0-rc4.
Source: An Evolutionary Study of Linux Memory Management for Fun and Profit
Memory Bugs 5種bugs存在mm: memory error, checking, concurrency, logic and programming.
透過heat map可清楚看到主要bug發生地方
主要的bug fix在: Memory Allocation, Garbage Collection (GC), Virtual Memory Management.
大部份memory leak並不是因為忘了free, 而是錯誤的page fault handling和 free page的計算.
MM較大的問題是很難去track正確的狀態.
Memory optimization 定義3種optimization patches
data structure: 避免nested data structure. Scalability的實現, scalability問題是因為locking for atomic access to shared data structures.</description>
    </item>
    
    <item>
      <title>RaspberryPi3: GLMark2 using weston with DRM backend</title>
      <link>https://oopsmonk.github.io/posts/2017-06-05-raspberrypi3-glmark2-using-weston-with-drm-backend/</link>
      <pubDate>Mon, 05 Jun 2017 09:39:30 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2017-06-05-raspberrypi3-glmark2-using-weston-with-drm-backend/</guid>
      <description>How to use weston with DRM backend in Raspbian, and gets benchmark score by GLMark2.
With regards to hardware acceleration, We can enable VC4 driver through raspi-config.
# update system and raspi-config script $ sudo apt-get update &amp;amp;&amp;amp; sudo apt-get upgrade $ sudo apt-get install raspi-config # enable Broadcom VC4 driver $ sudo raspi-config Advanced Options -&amp;gt; GL Driver -&amp;gt; GL (Full KMS) Test environment:
2017-04-10-raspbian-jessie-lite HDMI 1080P 60Hz CPU/GPU use default settings(no overclock) Test packages:</description>
    </item>
    
    <item>
      <title>LGS Hell</title>
      <link>https://oopsmonk.github.io/posts/2017-05-31-2017month5/</link>
      <pubDate>Wed, 31 May 2017 08:11:10 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2017-05-31-2017month5/</guid>
      <description>以前球隊在回防時, 教練總會說&amp;quot;快跑! 別回頭, 到定點再休息&amp;quot;.
關於人生, 喘息點在哪兒? 我想就在滴水穿石之間!
主要在了解linux graphic system架構, 並分析wayland weston compositor/glmark2的repaint flow.
Week18 (05/05) 網路文章 和百年公斤原器說再見！七大國際單位制將改頭換面
原來用抽像來定義實體早己行之有年.
網路資源 C++ Language Interface Foundation (CLIF)
Google 做了一個C++ wrapper generator, 目前看來只for Python, 目標是支援更多的語言.
Week19 (05/12) 網路文章 Weston repaint scheduling
Week20 (05/19) Wayland的weston compositor可透過wesgr來分析repaint過程. glmark2-es2-wayland 加入debug去看glmark repaint過程
[18:50:21.959] canvas_clear 1510 us [18:50:21.960] scenc_draw 389 us [18:50:21.960] scenc_update 159 us [18:50:21.960] weston weston_output_repaint[+] [18:50:21.960] weston surface_flush_damage [18:50:21.960] weston surface_flush_damage [18:50:21.961] weston surface_flush_damage [18:50:21.961] weston surface_flush_damage [18:50:21.</description>
    </item>
    
    <item>
      <title>Linux Graphic Stack相關的名詞</title>
      <link>https://oopsmonk.github.io/posts/2017-05-30-linux-graphic-stack/</link>
      <pubDate>Tue, 30 May 2017 14:46:40 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2017-05-30-linux-graphic-stack/</guid>
      <description>Linux graphic 架構還滿複雜的, 在看時需要大略了解几個名詞及之間的關係.
X Window System:
目前來到第11版本所以叫X11, 是以X window System Core protocol為基礎的window system.
wayland:
由於X11太過複雜且在embbeded system中的效能不佳, 用來取代X window System Core protocol.
weston (wayland compositor):
以wayland protocol來實做的compositor做為參考的範例, 實用上會用Westeros, Clutter&amp;hellip;等.
KMS/UMS:
Kernel mode-setting 及User mode-setting.
OpenGL: 由Khronos Group制定的跨平台graphic API.
GLX:
是一個extension, 做為OpenGL與X window system之間的橋樑. 就像embedded system的EGL, MacOS的AGL.
DRM(Direct Rendering Manager):
為了防止世界被破壞, 保護世界的和平. 防止同時使用graphic buffer.
DRI(Direct Rendering Infrastructure):
Mesa及DRM之間的橋樑. Ref: Introduction to the Direct Rendering Infrastructure
CRTC (CRT Controller):
Crtc is in charge of reading the framebuffer memory and routes the data to an encoder.</description>
    </item>
    
    <item>
      <title>Enable gzip compression in Nginx</title>
      <link>https://oopsmonk.github.io/posts/2017-05-19-enable-gzip-compression-in-nginx/</link>
      <pubDate>Fri, 19 May 2017 15:21:10 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2017-05-19-enable-gzip-compression-in-nginx/</guid>
      <description>How to enable and test gzip in Nginx.
Official document: ngx_http_gzip_module
Enable gzip I use Raspberry Pi System Monitor to test gzip module.
Modify /etc/nginx/sites-available/default to enable gzip.
In this case I only change the RpiMonitor website in the server, you can apply it to global by /etc/nginx/nginx.conf
location /rpi { proxy_pass http://127.0.0.1:9999/RpiMonitor; } Change to
location /rpi { proxy_pass http://127.0.0.1:9999/RpiMonitor; gzip on; gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript; gzip_proxied any; } Then reload nginx.</description>
    </item>
    
    <item>
      <title>失速列車</title>
      <link>https://oopsmonk.github.io/posts/2017-04-01-2017month4/</link>
      <pubDate>Fri, 28 Apr 2017 09:27:35 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2017-04-01-2017month4/</guid>
      <description>以前球隊在回防時, 教練總會說&amp;quot;快跑! 別回頭, 到定點再休息&amp;quot;.
關於人生, 喘息點在哪兒? 我想就在滴水穿石之間!
失速的這個月
Week14 (04/07) 網路文章 Adding A New System Service To Android 5: Tips and How To
由下到上打造一個android system service. HW -&amp;gt; HAL -&amp;gt; JNI -&amp;gt; Service -&amp;gt; Manager -&amp;gt; Registering.
Adding New System Service in Android
Native system service.
33 Foods that Starve Cancer
滿有趣的論點, 細胞沒有supplement會死亡沒錯, 但microscopic cancers能否自己生出新的血管?
大部份的癌症無關基因, 超過40歲體內難免會有microscopic cells, 並可能轉變成cancer cells?
Week15 (04/14) img2ascii.py 參考網路上的做法, 加了些參數方便調整輸出的內容. pillow提供便利的API.
網路文章 Every attempt to manage academia makes it worse</description>
    </item>
    
    <item>
      <title>Android USB Media Transfer Protocol(MPT)</title>
      <link>https://oopsmonk.github.io/posts/2017-04-18-android-usb-media-transfer-protocol/</link>
      <pubDate>Tue, 18 Apr 2017 11:55:32 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2017-04-18-android-usb-media-transfer-protocol/</guid>
      <description>Study USB MTP Device and Host mode in Android M.
Source Code Cross Reference: Android 6.0.1_r10
MTP Device Mode Enable device mode:
Settings -&amp;gt; Developer options -&amp;gt; Select USB Configuration -&amp;gt; MTP
UsbDeviceManager: Setting USB config to mtp
device/lge/hammerhead/init.hammerhead.usb.rc : on property:sys.usb.config=mtp
system/core/rootdir/init.usb.configfs.rc: on property:sys.usb.config=mtp &amp;amp;&amp;amp; property:sys.usb.configfs=1
USB plug to PC:
MtpReceiver: listen to android.hardware.usb.action.USB_STATE and bring up MtpService
UsbDeviceManager: get uevent USB_STATE=CONFIGURED from kernel
MtpService: create MtpDatabase MtpDatabase: create volume and storage path</description>
    </item>
    
    <item>
      <title>Slow and Fast</title>
      <link>https://oopsmonk.github.io/posts/2017-03-01-2017month3/</link>
      <pubDate>Fri, 31 Mar 2017 13:21:57 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2017-03-01-2017month3/</guid>
      <description>以前球隊在回防時, 教練總會說&amp;quot;快跑! 別回頭, 到定點再休息&amp;quot;.
關於人生, 喘息點在哪兒? 我想就在滴水穿石之間!
Week9 (03/03) 228的4天連假讓這週過的特別快.
網路文章 What Americans can learn from other food cultures Google breaks SHA-1 web crypto for good but Torvalds plays down impact on Git Announcing the first SHA1 collision Google 公怖與CWI Amsterdam合作生出了第一個SHA-1 collision, 對於使用SHA-1的Git來說會有什麼影響?
目前看來是影響不大, 主因如下: Git remote 與 local 發生衝突時local並不會被override. 相較於Git, PDF檔是較容易被破解的. Git可能會計劃使用SHA3-256為新的hash algorithm.
為什麼不選SHA256? &amp;ldquo;SHA256 acceleration is mainly an ARM thing&amp;rdquo; - Torvalds 網路資源 Math is Fun: Common Core Standards: 基本數學.</description>
    </item>
    
    <item>
      <title>在Shell使用vi-mode</title>
      <link>https://oopsmonk.github.io/posts/2017-03-28-vi-mode-in-shell/</link>
      <pubDate>Tue, 28 Mar 2017 15:36:08 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2017-03-28-vi-mode-in-shell/</guid>
      <description>Vi用慣了, 那在shell也可以vi-style嗎? 答案是可以的!
這個方法可使用在常用的shell, 例如bash, ksh, zsh, mksh.
btw, mksh 是Android使用的shell, 但Ubuntu預設的dash 是不支援的.
在shell中執行set -o vi 後按&amp;rsquo;i&amp;rsquo;進入insert mode, &amp;lsquo;ESC&amp;rsquo;為normal mode.
回到原本的模式則是set -o emacs
如下圖:
Reference: Using vi-mode in your shell</description>
    </item>
    
    <item>
      <title>The First SHA1 Collision</title>
      <link>https://oopsmonk.github.io/posts/2017-03-03-the-first-sha1-collision/</link>
      <pubDate>Fri, 03 Mar 2017 09:44:13 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2017-03-03-the-first-sha1-collision/</guid>
      <description>CWI Institute in Amsterdam and Google genrate two PDF documents with the same SHA-1 digest.
Google security blog - Announcing the first SHA1 collision
SHA-1 collistion and Git If a file A with X hash in local repository and with X hash in remote (SHA-1 collistion between local and remote), would overwrite the local version? Nope. If it has the same SHA1, it means that when we receive the object from the other end, we will not overwrite the object we already have.</description>
    </item>
    
    <item>
      <title>新章</title>
      <link>https://oopsmonk.github.io/posts/2017-02-28-2017month2/</link>
      <pubDate>Thu, 16 Feb 2017 15:48:32 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2017-02-28-2017month2/</guid>
      <description>以前球隊在回防時, 教練總會說&amp;quot;快跑! 別回頭, 到定點再休息&amp;quot;.
關於人生, 喘息點在哪兒? 我想就在滴水穿石之間!
Week7 (02/17) 發現minimal-mistakes上缺了繁中, 便開了個PR#838 沒想到很快就被merge, 效率真快.
試玩BeautifulSoup 寫了個簡單的ck101Comics.py用來下載卡提諾×揪漫畫.
網路文章 Diving Into Android &amp;lsquo;M&amp;rsquo; Doze &amp;amp; Diving into Doze Mode for Developers
Android Doze在Nougat多了Light-Doze, Light-Doze的Maintenance Windows較短為了避免不同步問題, 當進入Deep-Doze(原本Marshmallow的Doze), Light-Doze會進入OVERRIDE不做任何事. 網路資源 E-book: Python for Informatics 讀書心得 Tuesdays with Morrie
讀完The Classroom, 直到這章節都是在講Mitch離開大學後的生活及偶然聽到電視上提到Morrie, 師生俩如何再度搭上線. Morrie對Mitch有很深的情感, Mitch稱他為&amp;rsquo;Coach&amp;rsquo;. &amp;ldquo;Dying,&amp;rdquo; Morrie suddenly said, &amp;ldquo;is only one thing to be sad over, Mitch. Living unhappily is something else. So many of the people who come to visit me are unhappy.</description>
    </item>
    
    <item>
      <title>Android Adoptable Storage</title>
      <link>https://oopsmonk.github.io/posts/2017-02-13-android-adoptable-storage/</link>
      <pubDate>Mon, 13 Feb 2017 10:08:28 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2017-02-13-android-adoptable-storage/</guid>
      <description>A study of adoptable storage in Android Marshmallow and Nougat.
How to Setup a Private Disk (External USB Storage) Android adoptable storage allow APP install to external storage that can reserve more internal space for other APPs.
Create Adoptable Storage Using Settings GUI Settings -&amp;gt; Storage &amp;amp; USB -&amp;gt; Portable storage -&amp;gt; Settings -&amp;gt; Format as internal
Use sm (Storage Manager) Command Find disk id # sm list-disks disk:8,16 disk:8,0 Format as internal # sm partition disk:8,0 private # sm list-volumes all public:8,17 mounted 629C-FBAF emulated:8,2 unmounted null private mounted null emulated mounted null private:8,2 mounted 3f538e6e-e6a9-4163-ac1e-e4c6602b3c34 Now, it&amp;rsquo;s a private storage in system.</description>
    </item>
    
    <item>
      <title>Android Media Framework</title>
      <link>https://oopsmonk.github.io/posts/2016-06-16-android-media-framework/</link>
      <pubDate>Thu, 16 Jun 2016 15:45:54 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2016-06-16-android-media-framework/</guid>
      <description>Android APIs for media playback: MediaPlayer and MediaCodec.
MediaPlayer mediaPlayer.setDataSource(path); //fd or url mediaPlayer.setDisplay(SurfaceHolder sh); //SurfaceView or VideoView mediaPlayer.prepare(); // MediaPlayer.start(); // MediaCodec /* init use MediaExtractor to get mime data create decoder by mime type configure decoder by video format and surface view */ MediaExtractor mExtractor; MediaCodec mDecoder; mExtractor = new MediaExtractor(); mExtractor.setDataSource(filePath); MediaFormat format = mExtractor.getTrackFormat(track_index); String mime = format.getString(MediaFormat.KEY_MIME); if mime.startsWith(&amp;#34;video/&amp;#34;) mExtractor.selectTrack(track_index); mDecoder = MediaCodec.createDecoderByType(mime); mDecoder.configure(format, surface, null, 0 /* Decoder */); mDecoder.</description>
    </item>
    
    <item>
      <title>Android build error on Ubuntu 16.04 LTS</title>
      <link>https://oopsmonk.github.io/posts/2016-06-07-android-build-error-on-ubuntu-16-04-lts/</link>
      <pubDate>Tue, 07 Jun 2016 13:21:48 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2016-06-07-android-build-error-on-ubuntu-16-04-lts/</guid>
      <description>After update system from Ubuntu 14.04 to 16.04, I got some problems, when I was building Android source code.
openjdk-7-jdk is gone Add PPA for OpenJDK7
sudo add-apt-repository ppa:openjdk-r/ppa sudo apt remove openjdk-* icedtea-* icedtea6-* sudo apt update &amp;amp;&amp;amp; sudo apt install openjdk-7-jdk git ccache automake lzop bison gperf build-essential zip curl zlib1g-dev zlib1g-dev:i386 g++-multilib python-networkx libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven If you have other java version in system, make sure your java version is correct.</description>
    </item>
    
    <item>
      <title>Android Full Disk Encryption Workflow (default encryption)</title>
      <link>https://oopsmonk.github.io/posts/2016-04-29-android-full-disk-encryption-workflow/</link>
      <pubDate>Fri, 29 Apr 2016 09:51:48 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2016-04-29-android-full-disk-encryption-workflow/</guid>
      <description>This study is based on Android Marshmallow.
Android full disk encryption use dm-crypt, which works with block devices. Please refer to the following docs for more detail:
Full Disk Encryption
How to setup full disk encryption Android support forceencrypt and encryptable encryption flags, and only support ext4 and f2fs file systems.
Setup forceencrypt fstab.bullhead:
/dev/block/platform/soc.0/f9824900.sdhci/by-name/userdata /data ext4 noatime,nosuid,nodev,barrier=1,data=ordered,nomblk_io_submit,noauto_da_alloc,errors=panic wait,check,forceencrypt=/dev/block/platform/soc.0/f9824900.sdhci/by-name/metadata Setup encryptable fstab.hammerhead:
/dev/block/platform/msm_sdcc.1/by-name/userdata /data ext4 noatime,nosuid,nodev,barrier=1,data=ordered,nomblk_io_submit,noauto_da_alloc,errors=panic wait,check,encryptable=/dev/block/platform/msm_sdcc.1/by-name/metadata Related Properties and source code location Related source code:</description>
    </item>
    
    <item>
      <title>LibCEC on Raspberry Pi</title>
      <link>https://oopsmonk.github.io/posts/2015-11-03-libcec-on-raspberry-pi/</link>
      <pubDate>Tue, 03 Nov 2015 14:44:47 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2015-11-03-libcec-on-raspberry-pi/</guid>
      <description>Install requirements sudo apt-get install build-essential autoconf liblockdev1-dev \ libudev-dev git libtool pkg-config cmake libxrandr-dev -y Python and Swing support (Optional)
sudo apt-get install python-dev swig -y Checkout and build libcec source code The current version is libcec-3.0.1, but I got an error as follows:
make[2]: *** No rule to make target &#39;1&#39;, needed by &#39;src/libcec/libcec.so.3.0.1&#39;. Stop. Using libcec-3.0.0 instead of libcec-3.0.1, it&amp;rsquo;s work properly.
git clone https://github.com/Pulse-Eight/libcec.git cd libcec git checkout libcec-3.</description>
    </item>
    
    <item>
      <title>Firefox is Really Slow</title>
      <link>https://oopsmonk.github.io/posts/2015-08-18-firefox-is-really-slow/</link>
      <pubDate>Tue, 18 Aug 2015 10:45:44 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2015-08-18-firefox-is-really-slow/</guid>
      <description>Firefox is extremely slow on my system, include menu, right-click, tab opening&amp;hellip;etc.
Mozilla Firefox 40.0
Xubuntu 14.04 LTS 64-bit
Linux 3.16.0-45-generic #60~14.04.1-Ubuntu SMP Fri Jul 24 21:16:23 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux
After I turned off hardware acceleration, everything is fine.
Type this in the browser&amp;rsquo;s address bar to trun it off:
about:preferences#advanced </description>
    </item>
    
    <item>
      <title>Markdown Preview Use Sublime Text 3</title>
      <link>https://oopsmonk.github.io/posts/2015-08-12-markdown-preview-use-sublime-text-3/</link>
      <pubDate>Wed, 12 Aug 2015 19:03:54 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2015-08-12-markdown-preview-use-sublime-text-3/</guid>
      <description>Download Sublime Text 3 http://www.sublimetext.com/3
Install Package Control https://packagecontrol.io/installation#st3
Use Ctrl + ` or View &amp;gt; Show Console open the Sublime Text console.
Copy the text into console and press Enter to install Package Control.
Once finished installation, restart Sublime.
Install Markdown Preview package Open command palette via Ctrl + Shift + p or Preferences &amp;gt; Package Control from menu.
After typing install and press Enter, it will pop-up a package menu.</description>
    </item>
    
    <item>
      <title>Drawing IP Geolocation on World Map</title>
      <link>https://oopsmonk.github.io/posts/2015-08-01-drawing-ip-geolocation-to-the-world-map/</link>
      <pubDate>Sat, 01 Aug 2015 20:28:47 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2015-08-01-drawing-ip-geolocation-to-the-world-map/</guid>
      <description>I found some mystery visitors in nginx&amp;rsquo;s access log. I tried to figure out the location of those visitors and what they did.
IP collection First copy nginx&amp;rsquo;s access log to a folder and save all logs into a single file.
$ mkdir mysteryIPs &amp;amp;&amp;amp; cd $_ $ sudo cp /var/log/nginx/access.log.* . $ zcat access.log.* &amp;gt; access-gz.log $ cat access.log.1 &amp;gt;&amp;gt; access-gz.log $ cat access.log &amp;gt;&amp;gt; access-gz.log Remove LAN accesses from log file, for example my subnet IP rang is 192.</description>
    </item>
    
    <item>
      <title>Dependency src specified more than once</title>
      <link>https://oopsmonk.github.io/posts/2015-07-31-dependency-src-specified-more-than-once/</link>
      <pubDate>Fri, 31 Jul 2015 17:50:40 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2015-07-31-dependency-src-specified-more-than-once/</guid>
      <description>This problem appered when I was checking out older tag from the Chromium project.
Working with Release Branches
~/chromium_build/src$ git fetch --tags ~/chromium_build/src$ git checkout -b tag_35.0.1849.0 35.0.1849.0 ~/chromium_build/src$ gclient sync --with_branch_heads --jobs 16 Error log:
Syncing projects: 100% ( 1/ 1) src src (ERROR) ---------------------------------------- [0:00:00] Started. ________ running &#39;git reset --hard HEAD&#39; in &#39;/home/sam.chen/chromium_source/src&#39; [0:00:00] HEAD is now at 77bd011 Publish DEPS for Chromium 35.0.1849.0 [0:00:00] _____ src : Attempting rebase onto 77bd011602b1799f715591e697806c55e7ef8b7f.</description>
    </item>
    
    <item>
      <title>Build Android WebView From The Chromium Projects</title>
      <link>https://oopsmonk.github.io/posts/2015-07-31-build-android-webview-from-the-chromium-projects/</link>
      <pubDate>Fri, 31 Jul 2015 17:28:39 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2015-07-31-build-android-webview-from-the-chromium-projects/</guid>
      <description>First, check out and install the depot_tools package. $ git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git $ export PATH=$PATH:/path/to/depot_tools Checkout source code $ mkdir ~/chromium_build &amp;amp;&amp;amp; cd $_ ~/chromium_build$ fetch --nohooks android //Configure GYP ~/chromium_build$ echo &amp;quot;{ &#39;GYP_DEFINES&#39;: &#39;OS=android&#39;, }&amp;quot; &amp;gt; chromium.gyp_env //Update projects from gyp files. //You may need to run this again when you have added new files, updated gyp files, or sync&#39;ed your repository. ~/chromium_build$ gclient runhooks Environment setup ~/chromium_build$ sudo apt-get install openjdk-7-jdk //config default JDK ~/chromium_build$ sudo update-alternatives --config javac ~/chromium_build$ sudo update-alternatives --config java ~/chromium_build$ sudo update-alternatives --config javaws ~/chromium_build$ sudo update-alternatives --config javap ~/chromium_build$ sudo update-alternatives --config jar ~/chromium_build$ sudo update-alternatives --config jarsigner //install build dependencies ~/chromium_build$ src/build/install-build-deps-android.</description>
    </item>
    
    <item>
      <title>Install LaTeX on Ubuntu 14.04</title>
      <link>https://oopsmonk.github.io/posts/2015-07-09-install-latex-on-ubuntu-14-04/</link>
      <pubDate>Thu, 09 Jul 2015 22:49:47 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2015-07-09-install-latex-on-ubuntu-14-04/</guid>
      <description>This is a How-To article that include installation and compile LaTeX file to PDF using Texmaker, Sublime Text 3, and Vim.
Install TeX Live Install texlive-latex-extra instead of texlive-latex-base.
$sudo apt-get install texlive-latex-extra -y Initial user tree in home directory Before using tlmgr in user mode, you have to set up the user tree with the init-usertree action.
tlmgr is TeX Live package manager, you can run tlmgr --help for more detail.</description>
    </item>
    
    <item>
      <title>New Feature: Real-Time Monitoring</title>
      <link>https://oopsmonk.github.io/posts/2015-07-04-new-feature-real-time-monitoring/</link>
      <pubDate>Sat, 04 Jul 2015 17:37:31 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2015-07-04-new-feature-real-time-monitoring/</guid>
      <description>Real-Time Monitor for rpi-monitor:
Update system status every 5 seconds. Two HTML layouts: change different layout via click Real-Time on navigation bar. Project on github: rpi-monitor Layout 1(default):
Layout 2:</description>
    </item>
    
    <item>
      <title>Basic Calisthenics Workout</title>
      <link>https://oopsmonk.github.io/posts/2015-04-22-basic-calisthenics-workout/</link>
      <pubDate>Wed, 22 Apr 2015 18:49:37 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2015-04-22-basic-calisthenics-workout/</guid>
      <description>Core Hollow Body Hold
Plank Variation
L Sit
Upper Chest/Push up Exercises &amp;amp; Variations
Pull-up
Dips
Lower Lower Back
Leg workout
Other resources Full Body workout
Core beginner to advanced
Push beginner to advanced
Push beginner to advanced
Comprehensive handstand tutorial</description>
    </item>
    
    <item>
      <title>Build A Blog with Jekyll and GitHub on Raspberry Pi</title>
      <link>https://oopsmonk.github.io/posts/2015-03-05-build-a-blog-with-jekyll-on-raspberry-pi/</link>
      <pubDate>Thu, 05 Mar 2015 23:30:11 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2015-03-05-build-a-blog-with-jekyll-on-raspberry-pi/</guid>
      <description>I recently switched my blog from Google Blogger to GitHub Pages, here is how I built my blog. I&amp;rsquo;ll go through the following:
Install Jekyll on Raspberry Pi Setup Jekyll Theme Post a new article Images minimization Commit to GitHub Using Jekyll and Minimal Mistake build a blog and host on GitHub and Raspberry Pi(or Ubuntu).
Requirements:
Raspberry Pi(or Ubuntu) GitHub account Jekyll 2.2+ Minimal Mistake Grunt If you have no idea with these things, here are useful resources:</description>
    </item>
    
    <item>
      <title>Baking 2014</title>
      <link>https://oopsmonk.github.io/posts/2014-12-31-baking2014/</link>
      <pubDate>Wed, 31 Dec 2014 19:11:23 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2014-12-31-baking2014/</guid>
      <description>原味戚風蛋糕(Chiffon Cake) 芋頭麵包(Taro Bread) 小餅乾(Biscuit) 萬聖節餅乾(Halloween Cookies) 海蒂白麵包(アルプスの少女ハイジ・ハイジの白パン) 黑糖饅頭(Brown Sugar Steamed Bread) 蛋糕土司(Cake Toast) 香蕉土司(Banana Toast) </description>
    </item>
    
    <item>
      <title>Using Git With Multiple SSH Keys and Accounts</title>
      <link>https://oopsmonk.github.io/posts/2014-12-12-multiplesshkeyswithgithub/</link>
      <pubDate>Fri, 12 Dec 2014 01:53:31 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2014-12-12-multiplesshkeyswithgithub/</guid>
      <description>Generating SSH keys for GitHub Here are github account and work account.
GitHub:
SSH Key: github_id_rsa
Account: oopsmonk
Work:
SSH Key: work_id_rsa
Account: SamChen
Add SSH config File Modify ~/.ssh/config
# Default github Host github.com HostName github.com PreferredAuthentications publickey IdentityFile ~/.ssh/github_id_rsa # Work git server Host work.gitserver.com HostName work.gitserver.com PreferredAuthentications publickey IdentityFile ~/.ssh/work_id_rsa Git Repository Configuation GitHub Project: $ git clone https://github.com/abc/projectA.git $ cd projectA #github account $ git config user.</description>
    </item>
    
    <item>
      <title>pyenv Quick Start (Utunbu 14.04)</title>
      <link>https://oopsmonk.github.io/posts/2014-12-10-pyenv/</link>
      <pubDate>Wed, 10 Dec 2014 01:53:31 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2014-12-10-pyenv/</guid>
      <description>installation Requirements $ sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev \ libreadline-dev libsqlite3-dev wget curl llvm install pyenv $ cd ~ $ git clone git://github.com/yyuu/pyenv.git .pyenv $ echo &amp;#39;export PYENV_ROOT=&amp;#34;$HOME/.pyenv&amp;#34;&amp;#39; &amp;gt;&amp;gt; ~/.bashrc $ echo &amp;#39;export PATH=&amp;#34;$PYENV_ROOT/bin:$PATH&amp;#34;&amp;#39; &amp;gt;&amp;gt; ~/.bashrc $ echo &amp;#39;eval &amp;#34;$(pyenv init -)&amp;#34;&amp;#39; &amp;gt;&amp;gt; ~/.bashrc install pyenv-virtualenv $ git clone https://github.com/yyuu/pyenv-virtualenv.git ~/.pyenv/plugins/pyenv-virtualenv $ echo &amp;#39;eval &amp;#34;$(pyenv virtualenv-init -)&amp;#34;&amp;#39; &amp;gt;&amp;gt; ~/.bashrc $ exec $SHELL Common Usage (Command Reference) List all available versions $ pyenv version -l Install python2.</description>
    </item>
    
    <item>
      <title>Bash Quick Reference</title>
      <link>https://oopsmonk.github.io/posts/2014-12-04-bashquickref/</link>
      <pubDate>Thu, 04 Dec 2014 01:53:31 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2014-12-04-bashquickref/</guid>
      <description>Advanced Bash-Scripting Guide
sed
awk
Internal Variables #current parent pid $$ #last background process pid $! #last exit status $? #current instance pid, Bash 4.x above. $BASHPID Arithmetic Expansion a=12 b=$(($a + 10)) b=`expr $a + 1` b=$(expr $a + 1) let b=$a+3 #let b=$a + 3 #incorrect let &amp;#34;b = $a + 3&amp;#34; declare -i b=$a+$a Manipulating Strings String is a number if [[ $var =~ ^-?[0-9]+$ ]]; then echo &amp;#34;$var is a number&amp;#34; fi if [[ !</description>
    </item>
    
    <item>
      <title>Raspberry Pi Monitor</title>
      <link>https://oopsmonk.github.io/posts/2014-07-21-rpimonitor/</link>
      <pubDate>Mon, 21 Jul 2014 01:53:31 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2014-07-21-rpimonitor/</guid>
      <description>Use RRDTool monitor Raspberry Pi, include CPU temperture, Memory usage, Disk I/O, Network I/O&amp;hellip;
Install install packages
$sudo apt-get install libcairo2-dev libpango1.0-dev libglib2.0-dev libxml2-dev \ librrd-dev python2.7-dev rrdtool python-rrdtool $wget https://pypi.python.org/packages/source/p/psutil/psutil-2.1.1.tar.gz $tar xf psutil-2.1.1.tar.gz $cd psutil-2.1.1 $sudo python setup.py install Download or clone rpi-monitor on github
https://github.com/oopsmonk/rpi-monitor
Setup Crontab By defualt, the cron.log is disabled in Raspbian. To enable it:
sudo vi /etc/rsyslog.conf find the line and uncomment it.
# cron.</description>
    </item>
    
    <item>
      <title>Baking 2013</title>
      <link>https://oopsmonk.github.io/posts/2013-12-31-baking2013/</link>
      <pubDate>Tue, 31 Dec 2013 19:11:23 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2013-12-31-baking2013/</guid>
      <description>起司麵包 綜合麵包 平底鍋做麵包 戚風蛋糕 香蕉核桃馬芬蛋糕 鮭魚炒飯 </description>
    </item>
    
    <item>
      <title>GitHub SVN Upstream (on Ubuntu12.04)</title>
      <link>https://oopsmonk.github.io/posts/2013-08-26-git-svn-upstream/</link>
      <pubDate>Mon, 26 Aug 2013 01:53:31 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2013-08-26-git-svn-upstream/</guid>
      <description>This is a git tutorial, create svn upstream on GitHub.
Use MOC project as a example.
#Checkout SVN and push to GitHub. Install packages
$ sudo apt-get install subversion git-svn Create git repository (it will take a long time)
$ git svn clone svn://daper.net/moc/trunk --no-metadata ./moc-svn-git $ cat moc-svn-git/.git/config [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true [svn-remote &amp;#34;svn&amp;#34;] noMetadata = 1 url = svn://daper.net/moc/trunk fetch = :refs/remotes/git-svn Update SVN repository</description>
    </item>
    
    <item>
      <title>Building MOC</title>
      <link>https://oopsmonk.github.io/posts/2013-08-23-mocbuilding/</link>
      <pubDate>Fri, 23 Aug 2013 01:53:31 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2013-08-23-mocbuilding/</guid>
      <description>clone MOC svn repository to github Ref: Converting a Subversion repository to Git
$ sudo apt-get install subversion git-svn $ mkdir moc-svn $ cd moc-svn $ svn co svn://daper.net/moc/trunk $ svn log -q | awk -F &amp;#39;|&amp;#39; &amp;#39;/^r/ {sub(&amp;#34;^ &amp;#34;, &amp;#34;&amp;#34;, $2); sub(&amp;#34; $&amp;#34;, &amp;#34;&amp;#34;, $2); print $2&amp;#34; = &amp;#34;$2&amp;#34; &amp;lt;&amp;#34;$2&amp;#34;&amp;gt;&amp;#34;}&amp;#39; | sort -u &amp;gt; authors-transform.txt $ cd .. $ mkdir moc-git $ git svn clone svn://daper.net/moc/trunk --no-metadata -A ./moc-svn/authors-transform.txt .</description>
    </item>
    
    <item>
      <title>Web dev example : JSON &amp; jQuery Mobile &amp; Bottle</title>
      <link>https://oopsmonk.github.io/posts/2013-08-07-bottlejqueryjson/</link>
      <pubDate>Wed, 07 Aug 2013 01:53:31 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2013-08-07-bottlejqueryjson/</guid>
      <description>Bottle is a fast, simple and lightweight WSGI micro web-framework for Python.
jQuery Mobile base on jQuery for mobile device.
jQuery vs. jQuery Mobile vs. jQuery UI
Install bottle: $ sudo apt-get install python-setuptools $ easy_install bottle Demo server deployment file structure: BottlejQuery ├── bottleJQuery.py └── index.html run command: $ ./bottleJQuery.py connect to server: http://localhost:8080/bottle Building simple web server use bottle bottleJQuery.py #!/usr/bin/env python from bottle import route, static_file, debug, run, get, redirect from bottle import post, request import os, inspect, json #enable bottle debug debug(True) # WebApp route path routePath = &amp;#39;/bottle&amp;#39; # get directory of WebApp (bottleJQuery.</description>
    </item>
    
    <item>
      <title>Sending HTML Mail Using SMTP With Authorization</title>
      <link>https://oopsmonk.github.io/posts/2013-07-31-sendingmailsmtp/</link>
      <pubDate>Wed, 31 Jul 2013 01:53:31 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2013-07-31-sendingmailsmtp/</guid>
      <description>Here is a text/plain MIME type parts in official exmaple code.
I remove it from my sample code, because it&amp;rsquo;s not show up in mail at Office Outlook 2010.
#!/usr/bin/env python &amp;#34;&amp;#34;&amp;#34; File name: sendMail.py Python send HTML mail using SMTP with authorization Usage : ./sendMail.py to@gmail.com Subtitle [ FilePath | txt ] &amp;#34;&amp;#34;&amp;#34; import smtplib import sys,traceback from email.mime.multipart import MIMEMultipart from email.mime.text import MIMEText from time import gmtime, strftime #log file location log_path = &amp;#34;.</description>
    </item>
    
    <item>
      <title>Redirect and Save iptables on Ubuntu 12.04</title>
      <link>https://oopsmonk.github.io/posts/2013-07-05-savingiptables/</link>
      <pubDate>Fri, 05 Jul 2013 01:53:31 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2013-07-05-savingiptables/</guid>
      <description>Redirect port 8080 to 80
sudo iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080 Check iptables setting
sudo iptables -t nat -L Save configure to iptables.rules
sudo iptables-save &amp;gt; /etc/iptables.rules Save Solution #1 Configre /etc/network/interfaces
iface eth0 inet dhcp pre-up iptables-restore &amp;lt; /etc/iptables.rules Save Solution #2 Configure /etc/network/if-pre-up.d/iptablesload
#!/bin/sh iptables-restore &amp;lt; /etc/iptables.rules exit 0 Configure /etc/network/if-post-down.d/iptablessave
#!/bin/sh iptables-save -c &amp;gt; /etc/iptables.rules if [ -f /etc/iptables.downrules ]; then iptables-restore &amp;lt; /etc/iptables.</description>
    </item>
    
    <item>
      <title>Connect Oracle 10g Database use JDBC</title>
      <link>https://oopsmonk.github.io/posts/2013-06-24-oracle10gpython/</link>
      <pubDate>Mon, 24 Jun 2013 01:53:31 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2013-06-24-oracle10gpython/</guid>
      <description>install jayDeBeApi &amp;amp; jpype
$ sudo apt-get install python-setuptools $ sudo easy_install JayDeBeApi $ sudo easy_install jpype Download Oracle JDBC Drivers ojdbc6.jar to local.
import jpype import jaydebeapi jHome = jpype.getDefaultJVMPath() print jHome jpype.startJVM(jHome, &amp;#39;-Djava.class.path=/path/to/ojdbc6.jar&amp;#39;) conn = jaydebeapi.connect(&amp;#39;oracle.jdbc.driver.OracleDriver&amp;#39;, &amp;#39;jdbc:oracle:thin:user/password@DB_HOST_IP:1521:DB_NAME&amp;#39;) curs = conn.cursor() curs.execute(&amp;#34;select * from ACCOUNT&amp;#34;) acc = curs.fetchall() curs.close() conn.close() jpype.shutdownJVM() print acc Reference:
https://pypi.python.org/pypi/JayDeBeApi
http://wiki.python.org/moin/Oracle</description>
    </item>
    
    <item>
      <title>Install JDK1.4.2(32bit) on Ubuntu 12.04 LTS(64bit) </title>
      <link>https://oopsmonk.github.io/posts/2013-06-20-jdk1.4.2/</link>
      <pubDate>Thu, 20 Jun 2013 01:53:31 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2013-06-20-jdk1.4.2/</guid>
      <description>Here is an error occurred if installed directly:
install.sfx.XXX: not found
Solution:
install g++-mltilib and JDK $ sudo apt-get install g++-multilib $ chmod +x j2sdk-1_4_2_19-linux-i586.bin $ ./j2sdk-1_4_2_19-linux-i586.bin ..... Do you agree to the above license terms? [yes or no] yes Unpacking... Checksumming... 0 0 Extracting... UnZipSFX 5.40 of 28 November 1998, by Info-ZIP (Zip-Bugs@lists.wku.edu). creating: j2sdk1.4.2_19/ creating: j2sdk1.4.2_19/jre/ creating: j2sdk1.4.2_19/jre/bin/ inflating: j2sdk1.4.2_19/jre/bin/java inflating: j2sdk1.4.2_19/jre/bin/keytool inflating: j2sdk1.4.2_19/jre/bin/policytool .... Creating j2sdk1.4.2_19/lib/tools.jar Creating j2sdk1.</description>
    </item>
    
    <item>
      <title>Remove the same files in two folders</title>
      <link>https://oopsmonk.github.io/posts/2013-06-19-comparermfileintwofolder/</link>
      <pubDate>Wed, 19 Jun 2013 01:53:31 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2013-06-19-comparermfileintwofolder/</guid>
      <description>有時在整理照片或文件時, 需要比對2個資料匣, 把重覆的檔案拿掉.
Dwonload Source Here
function usage(){ echo &amp;#34;Find the same file in two folders and remove it.&amp;#34; echo &amp;#34;usage : ./comp-rm.sh target-dir source-dir&amp;#34; echo &amp;#34;remove the same files in target-dir.&amp;#34; } if [ $# -ne 2 ]; then usage exit 1 fi target_dir=$1 source_dir=$2 f_list1=$(find &amp;#34;$target_dir&amp;#34; -type f) f_list2=$(find &amp;#34;$source_dir&amp;#34; -type f) for i in $f_list1; do echo $f_list2 | grep $(basename $i) &amp;gt;/dev/null &amp;amp;&amp;amp; hit_str+=$i&amp;#34;;&amp;#34; done if [ -z $hit_str ]; then echo &amp;#34;list is empty.</description>
    </item>
    
    <item>
      <title>Raspberry Pi Setup</title>
      <link>https://oopsmonk.github.io/posts/2013-06-15-rpisetup/</link>
      <pubDate>Sat, 15 Jun 2013 01:53:31 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2013-06-15-rpisetup/</guid>
      <description>Install Raspbian &amp;ldquo;wheezy&amp;rdquo; image Download image from Raspberry Pi offical website
Mount HOME to HDD Copy HOME data to disk $ sudo mkdir /media/new_home $ sudo mount /dev/sda1 /media/new_home $ sudo rsync -aXS /home/. /media/new_home/. $ sudo umount /media/new_home fstab #get disk UUID $ sudo blkid /dev/mmcblk0p1: SEC_TYPE=&amp;#34;msdos&amp;#34; LABEL=&amp;#34;boot&amp;#34; UUID=&amp;#34;936C-7122&amp;#34; TYPE=&amp;#34;vfat&amp;#34; /dev/mmcblk0p2: UUID=&amp;#34;c1198422-7a7c-4863-8a8f-45a1db26b4f2&amp;#34; TYPE=&amp;#34;ext4&amp;#34; /dev/sda1: UUID=&amp;#34;2cd990b5-6c27-4933-95d0-fd00b000fe77&amp;#34; TYPE=&amp;#34;ext4&amp;#34; #modify fstab $ echo &amp;#34;UUID=2cd880b5-6c27-4933-95d0-fd00b000fe77 /home ext4 defaults 0 2&amp;#34; | sudo tee --append /etc/fstab #mount HOMW without reboot.</description>
    </item>
    
    <item>
      <title>Add Git SHA1 property in Apache ANT build.xml</title>
      <link>https://oopsmonk.github.io/posts/2013-06-13-getgitinfoinant/</link>
      <pubDate>Thu, 13 Jun 2013 01:53:31 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2013-06-13-getgitinfoinant/</guid>
      <description>Create git.SHA1 property in build.xml file.
&amp;lt;available file=&amp;#34;.git&amp;#34; type=&amp;#34;dir&amp;#34; property=&amp;#34;git.present&amp;#34;/&amp;gt; &amp;lt;target name=&amp;#34;git.info&amp;#34; description=&amp;#34;Store git info&amp;#34; if=&amp;#34;git.present&amp;#34;&amp;gt; &amp;lt;exec executable=&amp;#34;git&amp;#34; outputproperty=&amp;#34;git.SHA1&amp;#34; failifexecutionfails=&amp;#34;false&amp;#34; errorproperty=&amp;#34;&amp;#34;&amp;gt; &amp;lt;arg value=&amp;#34;log&amp;#34;/&amp;gt; &amp;lt;arg value=&amp;#34;--pretty=oneline&amp;#34;/&amp;gt; &amp;lt;arg value=&amp;#34;-n1&amp;#34;/&amp;gt; &amp;lt;/exec&amp;gt; &amp;lt;condition property=&amp;#34;git.version&amp;#34; value=&amp;#34;${git.SHA1}&amp;#34; else=&amp;#34;unknown&amp;#34;&amp;gt; &amp;lt;and&amp;gt; &amp;lt;isset property=&amp;#34;git.SHA1&amp;#34;/&amp;gt; &amp;lt;length string=&amp;#34;${git.SHA1}&amp;#34; trim=&amp;#34;yes&amp;#34; length=&amp;#34;0&amp;#34; when=&amp;#34;greater&amp;#34;/&amp;gt; &amp;lt;/and&amp;gt; &amp;lt;/condition&amp;gt; &amp;lt;echo message=&amp;#34;print git log : &amp;#34; /&amp;gt; &amp;lt;echo message=&amp;#34;${git.SHA1}&amp;#34; /&amp;gt; &amp;lt;/target&amp;gt; Reference:
How to lookup the latest git commit hash from an ant build script</description>
    </item>
    
    <item>
      <title>Nginx Error - 413 Request Entity Too Large</title>
      <link>https://oopsmonk.github.io/posts/2013-06-05-nginxerror413/</link>
      <pubDate>Wed, 05 Jun 2013 01:53:31 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2013-06-05-nginxerror413/</guid>
      <description>nginx version: nginx/1.1.19, OS: Ubuntu12.04
Default nginx accepted body size limitation is 1MB.
You can add client_max_body_size in nginx.conf.
This parameter can put in http, server and location sections of configutation file.
Enlarge body size to 10MB
client_max_body_size 10M Or just disable it
client_max_body_size 0 For example enlarge body size to 10MB
Add to http section:
$ sudo vi /etc/nginx/nginx.conf http { ## # Basic Settings ## sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 65; types_hash_max_size 2048; client_max_body_size 10M; # server_tokens off; # server_names_hash_bucket_size 64; # server_name_in_redirect off; include /etc/nginx/mime.</description>
    </item>
    
    <item>
      <title>AWS S3 Download Bucket Folder</title>
      <link>https://oopsmonk.github.io/posts/2013-05-28-aws-s3-folderdownload/</link>
      <pubDate>Tue, 28 May 2013 01:53:31 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2013-05-28-aws-s3-folderdownload/</guid>
      <description>Currently, AWS web console not provide folder downloading. We can use s3cmd or s3Browser for this purpose.
s3Browser is a freeware Windows client for S3 and CloudFront.
s3cmd download Bucket folder:
s3cmd sync s3://bucketname/folder /local/folder For download files using s3Browser, here is a tutorial.
Uploading and Downloading Files to and from Amazon S3</description>
    </item>
    
    <item>
      <title>Web Micro Framework Battle</title>
      <link>https://oopsmonk.github.io/posts/2013-05-27-pythonwebmicroframwork/</link>
      <pubDate>Mon, 27 May 2013 00:53:31 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2013-05-27-pythonwebmicroframwork/</guid>
      <description>WSGI Micro Framworks 這陣子一直在找適合的Micro Framwork玩第一次的Web Application.
最後選擇用Bottle, 原因是:
Single file module, no dependencies with other library. Document 但是好不好用又是另一回事, 用了就知道..XD
以下是由WSGI.org列出的Micro Framwork:
bobo
Bobo is a light-weight framework. Its goal is to be easy to use and remember.
Bottle
Bottle is a fast and simple micro-framework for small web-applications. It offers request dispatching (Routes) with url parameter support, Templates, key/value Databases, a build-in HTTP Server and adapters for many third party WSGI/HTTP-server and template engines.</description>
    </item>
    
    <item>
      <title>Pandoc&#39;s Markdown Reference</title>
      <link>https://oopsmonk.github.io/posts/2013-05-23-pandocmarkdownref/</link>
      <pubDate>Thu, 23 May 2013 01:53:31 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2013-05-23-pandocmarkdownref/</guid>
      <description>Headers (Setext and atx) Setext-style只有兩階也就是HTML語法裡的h1及h2 tag,-跟=的個數沒有限制.
atx-style共有6階, h1~h6.
# This is H1. ## This is H2. ### This is H3. #### ... ###### This is H6. 除了階層較多之外, atx-style還可以使用Markdown syntax.
###This is *H3* header. Output:
This is H3 header. Inline Formatting Basic Emphasis 斜體字: *, _ , 粗體字: **, __,
*single asterisks* _single underscores_ **double asterisks** __double underscores__ Output:
single asterisks
single underscores
double asterisks
double underscores
Pandoc Inline strikeout, superscript and subscript ~~~deleted text~~~ H~2~O is a liquid.</description>
    </item>
    
    <item>
      <title>uWSGI &amp; Nginx on Ubuntu</title>
      <link>https://oopsmonk.github.io/posts/2013-05-21-usinguwsgi/</link>
      <pubDate>Tue, 21 May 2013 08:53:31 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2013-05-21-usinguwsgi/</guid>
      <description>Install uWSGI Configure uWSGI $ sudo apt-get install python-dev python-pip $ sudo pip uwsgi ################# uWSGI configuration ################# pcre = False kernel = Linux malloc = libc execinfo = False ifaddrs = True ssl = True matheval = False zlib = True locking = pthread_mutex plugin_dir = . timer = timerfd yaml = True json = False filemonitor = inotify routing = False debug = False zeromq = False capabilities = False xml = expat event = epoll ############## end of uWSGI configuration ############# *** uWSGI is ready, launch it with /usr/local/bin/uwsgi *** Successfully installed uwsgi Cleaning up.</description>
    </item>
    
    <item>
      <title>About Markup</title>
      <link>https://oopsmonk.github.io/posts/2013-05-21-aboutmarkup/</link>
      <pubDate>Tue, 21 May 2013 00:53:31 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2013-05-21-aboutmarkup/</guid>
      <description>Markup Language 寫文件或blog最困擾的就是排版, 大略看一下目前較流行的Markdown &amp;amp; reStructuredText, 決定用Markdown來寫, rst給我的感覺就是要再學另一種語言, 雖然強大, 但我只要夠用就好, 必竟都有人用Markdown寫書了 XD.
Markdown Setup 目前是用Vim + Pandoc來寫Markdown, 網路上也有Web editor, 或是windows平台的Markdownpad, 但Web用起來不順手, Markdownpad不能跨平台. 用Vim麻煩的是preview, 寫完要手動用Pandoc轉成html, 之後直接將轉出來的html, 直接貼到blogger.
一般沒有CSS的用法:
$ pandoc README.md -o out.html 加入CSS依文件的方法是:
$ pandoc -c markdown.css README.md -o out.html 但是會有一個問題, 貼上blogger時會無法正常顯示, 原因在於html裡是這樣寫的:
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;markdown.css&amp;quot; type=&amp;quot;text/css&amp;quot; /&amp;gt; 後來想到了一個workaround, 用-H參數將CSS放入Header, 但也不是直接帶入, 需要將一般的CSS file用style tag包起來, 如下:
&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt; Your CSS syntax.... &amp;lt;/style&amp;gt; 另存成pandoc-markdown.css, 如此才是真正的__fully standalone__.
$ pandoc -H pandoc-markdown.css README.md -o out.</description>
    </item>
    
    <item>
      <title>OpenNMS Architecture Introduction (Discovery &amp; Monitor)</title>
      <link>https://oopsmonk.github.io/posts/2013-02-03-opennmsarchitectureintroduction/</link>
      <pubDate>Sun, 03 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2013-02-03-opennmsarchitectureintroduction/</guid>
      <description>O.S. : Ubuntu12.04 LTS
OpenNMS Version : 1.10.7
OpenNMS base on TMN &amp;amp; FCAPS network management models.
OpenNMS Block Diagram Discovery &amp;amp; Monitor daemons Eventd
Event handling daemon
Configuration files:
eventconf.xml -&amp;gt; Defines the UEI (Universal Event Identifiers).
eventd-configuration.xml -&amp;gt; Defines operating parameters for eventd such as timeouts, listener threads and listener port.
events-archiver-configuation.xml -&amp;gt; Configuration for event archive daemon.
events.archiver.properties -&amp;gt; Fine tune events archive subsystem.
etc/events/*.xml -&amp;gt; Vendor UEI define files.</description>
    </item>
    
    <item>
      <title>Baking 2012</title>
      <link>https://oopsmonk.github.io/posts/2012-11-30-baking2012/</link>
      <pubDate>Fri, 30 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2012-11-30-baking2012/</guid>
      <description>結束上份工作後, 不想閒著, 也就開始找新&amp;quot;玩具&amp;quot;, 做麵包好像滿有趣的, 又不用出門可以在家陪小朋友,於是爬了2~3天的文章,了解需要的東西.
Google什麼是yeast(Active dry, Instant dry, Fresh)?
什麼是麵粉(高筋, 中筋, 低筋, 法國粉)?
什麼是麵糰(擴展, 完成)?
什麼是揉麵?
天真的以為&amp;quot;吐司&amp;quot;很簡單,麵糰整好丟進烤模..done.
結果烤到第五條吐司, 才__接近滿模__.
失敗品之一:
接著白吐司太無聊了, 所以做了其它嚐試
全麥鮪魚麵包 高粉 270g 全麥粉 30g Instant dry 3/4t 奶油 20g 塩 1/2t 糖 20g 水 185g 整形參考: 蒔蘿鮪魚麵包
海蒂的白麵包 配方跟做法參考 【肉桂打噴嚏】海蒂的白麵包
全麥豆漿枸杞葡萄乾 高粉 270g 全麥粉 30g Instant dry 3/4t 奶油 20g 塩 1/2t 糖 20g 豆漿 185g 枸杞 + 葡萄乾 適量. No-Knead Bread 做了這些後, 深深感到&amp;hellip;
萬能的雙手真的累人又吵, 尤其吐司要揉到完成階段.</description>
    </item>
    
    <item>
      <title>How to split boot.img and get kernel config</title>
      <link>https://oopsmonk.github.io/posts/2012-09-12-how2splitbootimage/</link>
      <pubDate>Wed, 12 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2012-09-12-how2splitbootimage/</guid>
      <description>boot_cm9.img file from mk802_legacy-compatibility_v1.zip
Device: Rikomagic MK802
Script files : Split_bootimg.pl , extract-ikconfig ( in {kernel_source}/script )
Split boot.img Copy boot_cm9.img, Split_bootimg.pl, extract-ikconfig into &amp;lsquo;split_boot&amp;rsquo;
$ mkdir split_boot $ cd split_boot $ ./split_bootimg.pl boot_cm9.img Page size: 2048 (0x00000800) Kernel size: 8094708 (0x007b83f4) Ramdisk size: 178940 (0x0002bafc) Second size: 0 (0x00000000) Board name: Command line: console=ttyS0,115200 rw init=/init loglevel=8 Writing boot_cm9.img-kernel ... complete. Writing boot_cm9.img-ramdisk.gz ... complete. Get kernel image (boot_cm9.img-kernel) and ramdisk (boot_cm9.</description>
    </item>
    
    <item>
      <title>How to extract kernel config from uImage</title>
      <link>https://oopsmonk.github.io/posts/2012-08-21-how2extractkernelconfigfromuimage/</link>
      <pubDate>Tue, 21 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2012-08-21-how2extractkernelconfigfromuimage/</guid>
      <description>Get extract-ikconfig in kernel-source/scripts/ $mkdir extreact-uImage $cd extreact-uImage $cp {kernel-source}/scripts/extract-ikconfig . Dump uImage skip 1024 bytes $cp {uImage/what/you/want} uImage $dd if=uImage of=dd_uImage bs=1024 skip=1 $./extract-ikconfig dd_uImage &amp;gt; config </description>
    </item>
    
    <item>
      <title>XBMC for Android on MK802</title>
      <link>https://oopsmonk.github.io/posts/2012-07-29-xbmc4androidonmk802/</link>
      <pubDate>Sun, 29 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2012-07-29-xbmc4androidonmk802/</guid>
      <description>XBMC announced XBMC for Android.
不過並不打算放上Google Play, 需要自行compile及打包, 方法可參考:
Build XBMC for Android on lubuntu 12.04
在此記錄一下目前在MK802跑起來的情況.
MK802介紹可參考:
Android 4.0 mini PC 最小的主機MK802
CPU : Allwinner A10 - ARM Cortex A8 SoC
GPU : ARM Mali 400
RAM : 1GB
以公定價$79USD及讓人跌破眼鏡的入手價, 拿來玩真是夠本了.
這次是要用Android 手機來控制 XBMC, 因為MK802沒有IR只能用滑鼠操作上有些不便.
Google Play上有Official XBMC Remote可直接下載來用.
中文設定: 切換到Appearance -&amp;gt; Setting -&amp;gt; International -&amp;gt; Language
為了能透過HTTP連到MK802的XBMC, 需要將&amp;quot;網站伺服&amp;quot;的功能打開, 設定port number
接著查看IP, 設定手機上的XBMC Remote如下:
連線成功就會出現控制選項
用手機上&amp;quot;Remote Control&amp;quot; Navigation, 測試播放USB裡的影片</description>
    </item>
    
    <item>
      <title>Build XBMC for Android on lubuntu 12.04</title>
      <link>https://oopsmonk.github.io/posts/2012-07-28-buildxbmc/</link>
      <pubDate>Sat, 28 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2012-07-28-buildxbmc/</guid>
      <description>Install required packages # sudo apt-get install build-essential default-jdk git curl autoconf \ unzip zip zlib1g-dev gawk gperf Getting the Android SDK and NDK http://developer.android.com/sdk/index.html
SDK : android-sdk_r20.0.1-linux.tgz
crystax-5 NDK with enabled support of C++ exceptions, RTTI and Standard C++ Library
http://www.crystax.net/en/android/ndk/7#download
NDK : android-ndk-r7-crystax-5.beta2-linux-x86.tar.bz2
Installing Android SDK packages &amp;lt;android-sdk&amp;gt; : $HOME/XBMC_Project/android-sdk-linux
# cd &amp;lt;android-sdk&amp;gt;/tools # ./android update sdk -u -t platform,platform-tool Setup the Android toolchain &amp;lt;android-ndk&amp;gt; : $HOME/XBMC_Project/android-ndk-r8b &amp;lt;android-toolchain&amp;gt; : $HOME/XBMC_Project/android_toolchain/android-9</description>
    </item>
    
    <item>
      <title>Android Threads, Handlers and AsyncTask</title>
      <link>https://oopsmonk.github.io/posts/2012-06-14-androidthreadshandlersandasynctask/</link>
      <pubDate>Thu, 14 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2012-06-14-androidthreadshandlersandasynctask/</guid>
      <description>先看過Processes and Threads會有比較清楚的概念, 當Adnroid Application 啟動後, 系統會建一個主要的thread 稱 &amp;ldquo;main thread&amp;rdquo; or &amp;ldquo;UI thread&amp;rdquo;, 所有的components 皆跑在這個UI thread, system calls 也是透過UI thread dispatched給各個component, ex: onKeyDown, touch event.
UI thread 如因大量運算或等待而blocked, 預設超過5秒ANR(Application Not Responding)就會發生.
且Android UI components 並非thread-safe, 使用上要特別小心.
所以:
long time computation使用另外的thread, 不要寫在 UI Thread. 不要在UI thread 之外使用UI component method. 透過Thread, Handler and AsyncTask perform asynchronous processing, 避免UI thread block. Threads Android 提供以下的method, 可在其它的thread 下調用 UI thread.
Activity.runOnUiThread(Runnable) View.post(Runnable) &amp;lt;-- used in example code.</description>
    </item>
    
    <item>
      <title>COMPUTEX TAIPEI 2012</title>
      <link>https://oopsmonk.github.io/posts/2012-06-10-computextaipei/</link>
      <pubDate>Sun, 10 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2012-06-10-computextaipei/</guid>
      <description>這次的Computex show 中Micorsofte主要是強打windows 8系統的 Ultrabook, Tablet , AIO(All in One) PC, 主要大廠ASUS, Acer, Compal, Gigabyte, MSI, Samsung &amp;hellip;等都有展出, 除了這些來看看其它有趣的東西吧.
互動感十足的販賣機, 原本以為是單純的transparent panel 播放動畫, 沒想到是touch panel還可以玩game, AUO的面板, 當然這麼大的面板用的是光學觸控(Optical touch).
LITEMAX(晶達光電) 的 Spanpixel Resizing LCD透過獨特的面板切割技術, 提供非一般標準比例的LCD顯示器. 做為特殊工業應用, 車站、購物中心，公共資訊&amp;hellip;等的顯示應用. 今年掛牌上市的公司, 電子廣告看板模組似乎有不錯的潛力.
讓我想到Always Innovatin 的 HDMI Dongle, 家裡的舊電視只要有HDMI port就可以升級成SmartTV, 後來得知國內有几家公司有在做類似的產品, 似乎也是不錯的商機.
Genius 在2011年推出全球首款Ring Mouse, 今年又推出新一代的Ring Presenter. 用的是2.4GHz無線.
精傑電子, 主要強調3D graphic處理能力, 應用在3D presentations, 用transparent panel. 總覺得與磐儀科技推的行動醫療平板很像.
規格如下:
CPU: AMD G-Series T56N Dual Core GPU: AMD Radeon HD6320 Screen: 10.</description>
    </item>
    
    
    
  </channel>
</rss>
