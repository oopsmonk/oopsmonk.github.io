<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Ubuntu on oopsmonk</title>
    <link>https://oopsmonk.github.io/tags/ubuntu/</link>
    <description>Recent content in Ubuntu on oopsmonk</description>
    <image>
      <title>oopsmonk</title>
      <url>https://oopsmonk.github.io/images/bio-oopsmonk.jpg</url>
      <link>https://oopsmonk.github.io/images/bio-oopsmonk.jpg</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 May 2023 12:00:25 +0800</lastBuildDate><atom:link href="https://oopsmonk.github.io/tags/ubuntu/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Browser Graphics Are Broken</title>
      <link>https://oopsmonk.github.io/posts/2023-05-25-browser-graphics-are-broken/</link>
      <pubDate>Thu, 25 May 2023 12:00:25 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2023-05-25-browser-graphics-are-broken/</guid>
      <description>Cannot see graphics in browsers on Ubuntu</description>
    </item>
    
    <item>
      <title>Fcitx5 倉頡輸入法 on Ubuntu 22.04</title>
      <link>https://oopsmonk.github.io/posts/2022-12-19-fcitx5/</link>
      <pubDate>Mon, 19 Dec 2022 17:58:21 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2022-12-19-fcitx5/</guid>
      <description>description goes here</description>
    </item>
    
    <item>
      <title>Building Different Android Version Using schroot</title>
      <link>https://oopsmonk.github.io/posts/2017-10-24-building-different-android-version/</link>
      <pubDate>Tue, 24 Oct 2017 10:07:29 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2017-10-24-building-different-android-version/</guid>
      <description>I have a build environment with make4.1 and JDK8 for Android N/O, but JDK6 and make3.81 are required by Android KitKat.
Here is a way to create a clean environment for Android KK.
Create a new environment in current Ubuntu 16.04 install schroot and debootstrap
sudo apt install schroot debootstrap
if xenial no exist, update to latest version of debootstrap
ls -l /usr/share/debootstrap/scripts/xenial
Configure new environment edit /etc/schroot/schroot.conf
[Build_KK] description=ubuntu16.04 Android_KK type=directory directory=/srv/chroot/Build_KK users=oopsmonk groups=oopsmonk root-groups=root profile=default Adding Mount points edit /etc/schroot/default/fstab</description>
    </item>
    
    <item>
      <title>Firefox is Really Slow</title>
      <link>https://oopsmonk.github.io/posts/2015-08-18-firefox-is-really-slow/</link>
      <pubDate>Tue, 18 Aug 2015 10:45:44 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2015-08-18-firefox-is-really-slow/</guid>
      <description>Firefox is extremely slow on my system, include menu, right-click, tab opening&amp;hellip;etc.
Mozilla Firefox 40.0
Xubuntu 14.04 LTS 64-bit
Linux 3.16.0-45-generic #60~14.04.1-Ubuntu SMP Fri Jul 24 21:16:23 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux
After I turned off hardware acceleration, everything is fine.
Type this in the browser&amp;rsquo;s address bar to trun it off:
about:preferences#advanced </description>
    </item>
    
    <item>
      <title>Drawing IP Geolocation on World Map</title>
      <link>https://oopsmonk.github.io/posts/2015-08-01-drawing-ip-geolocation-to-the-world-map/</link>
      <pubDate>Sat, 01 Aug 2015 20:28:47 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2015-08-01-drawing-ip-geolocation-to-the-world-map/</guid>
      <description>I found some mystery visitors in nginx&amp;rsquo;s access log. I tried to figure out the location of those visitors and what they did.
IP collection First copy nginx&amp;rsquo;s access log to a folder and save all logs into a single file.
$ mkdir mysteryIPs &amp;amp;&amp;amp; cd $_ $ sudo cp /var/log/nginx/access.log.* . $ zcat access.log.* &amp;gt; access-gz.log $ cat access.log.1 &amp;gt;&amp;gt; access-gz.log $ cat access.log &amp;gt;&amp;gt; access-gz.log Remove LAN accesses from log file, for example my subnet IP rang is 192.</description>
    </item>
    
    <item>
      <title>Install LaTeX on Ubuntu 14.04</title>
      <link>https://oopsmonk.github.io/posts/2015-07-09-install-latex-on-ubuntu-14-04/</link>
      <pubDate>Thu, 09 Jul 2015 22:49:47 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2015-07-09-install-latex-on-ubuntu-14-04/</guid>
      <description>This is a How-To article that include installation and compile LaTeX file to PDF using Texmaker, Sublime Text 3, and Vim.
Install TeX Live Install texlive-latex-extra instead of texlive-latex-base.
$sudo apt-get install texlive-latex-extra -y Initial user tree in home directory Before using tlmgr in user mode, you have to set up the user tree with the init-usertree action.
tlmgr is TeX Live package manager, you can run tlmgr --help for more detail.</description>
    </item>
    
    <item>
      <title>New Feature: Real-Time Monitoring</title>
      <link>https://oopsmonk.github.io/posts/2015-07-04-new-feature-real-time-monitoring/</link>
      <pubDate>Sat, 04 Jul 2015 17:37:31 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2015-07-04-new-feature-real-time-monitoring/</guid>
      <description>Real-Time Monitor for rpi-monitor:
Update system status every 5 seconds. Two HTML layouts: change different layout via click Real-Time on navigation bar. Project on github: rpi-monitor Layout 1(default):
Layout 2:</description>
    </item>
    
    <item>
      <title>Build A Blog with Jekyll and GitHub on Raspberry Pi</title>
      <link>https://oopsmonk.github.io/posts/2015-03-05-build-a-blog-with-jekyll-on-raspberry-pi/</link>
      <pubDate>Thu, 05 Mar 2015 23:30:11 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2015-03-05-build-a-blog-with-jekyll-on-raspberry-pi/</guid>
      <description>I recently switched my blog from Google Blogger to GitHub Pages, here is how I built my blog. I&amp;rsquo;ll go through the following:
Install Jekyll on Raspberry Pi Setup Jekyll Theme Post a new article Images minimization Commit to GitHub Using Jekyll and Minimal Mistake build a blog and host on GitHub and Raspberry Pi(or Ubuntu).
Requirements:
Raspberry Pi(or Ubuntu) GitHub account Jekyll 2.2+ Minimal Mistake Grunt If you have no idea with these things, here are useful resources:</description>
    </item>
    
    <item>
      <title>Redirect and Save iptables on Ubuntu 12.04</title>
      <link>https://oopsmonk.github.io/posts/2013-07-05-savingiptables/</link>
      <pubDate>Fri, 05 Jul 2013 01:53:31 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2013-07-05-savingiptables/</guid>
      <description>Redirect port 8080 to 80
sudo iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080 Check iptables setting
sudo iptables -t nat -L Save configure to iptables.rules
sudo iptables-save &amp;gt; /etc/iptables.rules Save Solution #1 Configre /etc/network/interfaces
iface eth0 inet dhcp pre-up iptables-restore &amp;lt; /etc/iptables.rules Save Solution #2 Configure /etc/network/if-pre-up.d/iptablesload
#!/bin/sh iptables-restore &amp;lt; /etc/iptables.rules exit 0 Configure /etc/network/if-post-down.d/iptablessave
#!/bin/sh iptables-save -c &amp;gt; /etc/iptables.rules if [ -f /etc/iptables.downrules ]; then iptables-restore &amp;lt; /etc/iptables.</description>
    </item>
    
    <item>
      <title>uWSGI &amp; Nginx on Ubuntu</title>
      <link>https://oopsmonk.github.io/posts/2013-05-21-usinguwsgi/</link>
      <pubDate>Tue, 21 May 2013 08:53:31 +0800</pubDate>
      
      <guid>https://oopsmonk.github.io/posts/2013-05-21-usinguwsgi/</guid>
      <description>Install uWSGI Configure uWSGI $ sudo apt-get install python-dev python-pip $ sudo pip uwsgi ################# uWSGI configuration ################# pcre = False kernel = Linux malloc = libc execinfo = False ifaddrs = True ssl = True matheval = False zlib = True locking = pthread_mutex plugin_dir = . timer = timerfd yaml = True json = False filemonitor = inotify routing = False debug = False zeromq = False capabilities = False xml = expat event = epoll ############## end of uWSGI configuration ############# *** uWSGI is ready, launch it with /usr/local/bin/uwsgi *** Successfully installed uwsgi Cleaning up.</description>
    </item>
    
  </channel>
</rss>
